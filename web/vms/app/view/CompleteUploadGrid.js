/*
 * File: app/view/CompleteUploadGrid.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VMS.view.CompleteUploadGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygridpanel1',

    requires: [
        'VMS.view.EasyDateColumn'
    ],

    itemId: 'uploadGrid',
    header: false,
    store: 'S3ResourceStore',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'key',
                    text: 'Resource',
                    flex: 2
                },
                {
                    xtype: 'easydatecolumn',
                    dataIndex: 'created_at',
                    text: 'Created On',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value === null || value === "") {
                            return "Unknown";
                        } else {
                            return value;
                        }
                    },
                    dataIndex: 'mime_type',
                    emptyCellText: 'Unknown',
                    menuText: '',
                    text: 'Mime Type',
                    flex: 1,
                    editor: {
                        xtype: 'combobox',
                        anyMatch: true,
                        displayField: 'type',
                        forceSelection: true,
                        queryMode: 'local',
                        store: 'MimeTypeStore',
                        typeAhead: true,
                        valueField: 'type'
                    }
                }
            ],
            viewConfig: {
                plugins: [
                    Ext.create('Ext.grid.plugin.DragDrop', {
                        dragGroup: 'resource',
                        enableDrop: false
                    })
                ]
            },
            plugins: [
                Ext.create('Ext.grid.plugin.CellEditing', {
                    clicksToEdit: 1,
                    triggerEvent: 'cellclick'
                })
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'left',
                    items: [
                        {
                            xtype: 'buttongroup',
                            disabled: true,
                            title: '',
                            titleCollapse: true,
                            columns: 1,
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'saveBtn',
                                    icon: '/images/mimiglyphs/54.png',
                                    text: '',
                                    tooltip: 'Save Changes'
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'resetBtn',
                                    icon: '/images/mimiglyphs/52.png',
                                    text: '',
                                    tooltip: 'Cancel Changes'
                                }
                            ]
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'deleteBtn',
                            icon: '/images/trash-icon.png',
                            scale: 'large',
                            text: '',
                            tooltip: 'Remove Selected'
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'typeAssignBtn',
                            icon: '/images/gear-icon.png',
                            scale: 'large',
                            text: '',
                            tooltip: 'Mime type based on file extension'
                        }
                    ]
                }
            ],
            selModel: Ext.create('Ext.selection.RowModel', {
                mode: 'MULTI'
            })
        });

        me.callParent(arguments);
    }

});