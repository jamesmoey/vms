/*
 * File: app/view/EasyDateColumn.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VMS.view.EasyDateColumn', {
    extend: 'Ext.grid.column.Column',
    alias: 'widget.easydatecolumn',

    initComponent: function() {
        var me = this;

        me.processEasyDateColumn(me);
        me.callParent(arguments);
    },

    processEasyDateColumn: function(config) {
        if (!config.recentFormat) {
            this.recentFormat = 'H:i:s';
        }

        if (!config.weekFormat) {
            this.weekFormat = 'l, H:i';
        }

        if (!config.monthFormat) {
            this.monthFormat = 'F j, H:i';
        }

        if (!config.yearFormat) {
            this.yearFormat = 'F j, y';
        }
    },

    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
        var column = metaData.column;
        var now = new Date();
        var today = new Date(now.getFullYear(), now.getMonth(), now.getDay());
        var startOfThisWeek = new Date(today.getTime() - (60*60*24*6));
        var startOfThisYear = new Date(now.getFullYear(), 0, 1);
        var endOfThisYear = new Date(now.getFullYear(), 11, 31, 23, 59, 59);
        var endOfToday = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59);
        var yesterday = new Date(now.getFullYear(), now.getMonth(), now.getDate()-1);
        var tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate()+1, 23, 59, 59);
        if (Ext.Date.between(value, yesterday, tomorrow)) {
            var day;
            if (Ext.Date.between(value, today, endOfToday)) day = '';
            else if (value > endOfToday) day = 'Tomorrow, ';
            else day = 'Yesterday, ';
            return day + Ext.Date.format(value, column.recentFormat);
        } else if (value < now) {
            if (value >= startOfThisWeek) {
                return Ext.Date.format(value, column.weekFormat);
            } else if (value >= startOfThisYear) {
                return Ext.Date.format(value, column.monthFormat);
            }
        } else if (value > now) {
            if (value < today.getTime() + (60*60*24*6)) {
                return 'Coming ' + Ext.Date.format(value, column.weekFormat);
            } else if (value < endOfThisYear) {
                return Ext.Date.format(value, column.monthFormat);
            }
        }
        return Ext.Date.format(value, column.yearFormat);
    }

});