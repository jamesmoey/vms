/*
 * File: app/view/UploadPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VMS.view.UploadPanel', {
    extend: 'Ext.panel.Panel',

    itemId: 'uploadPanel',
    layout: {
        align: 'stretch',
        padding: 10,
        type: 'vbox'
    },
    closable: true,
    title: 'Uploads',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'fieldcontainer',
                    width: 400,
                    layout: {
                        align: 'stretch',
                        type: 'hbox'
                    },
                    items: [
                        {
                            xtype: 'button',
                            text: 'Search'
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            margins: '0 0 0 10'
                        }
                    ]
                },
                {
                    xtype: 'dataview',
                    flex: 2,
                    itemId: 'uploadView',
                    itemSelector: 'div',
                    itemTpl: [
                        '{bucket}/{key}'
                    ],
                    store: 'S3ResourceStore'
                }
            ],
            tools: [
                {
                    xtype: 'tool',
                    itemId: 'refresh',
                    tooltip: 'Refresh Grid',
                    type: 'refresh'
                }
            ]
        });

        me.processPartUploadPanel(me);
        me.callParent(arguments);
    },

    processPartUploadPanel: function(config) {

    }

});