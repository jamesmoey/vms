/*
 * File: app/controller/PartUploadController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VMS.controller.PartUploadController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MultipartUploadStore'
    ],
    views: [
        'PartUploadWindow'
    ],

    onAbortUploadAction: function(eventOptions) {
        Ext.MessageBox.show({
            title: 'Are you sure?',
            msg: 'You want to abort this part uploaded resource.',
            buttons: Ext.MessageBox.YESNO,
            icon: Ext.MessageBox.QUESTION,
            fn: function(button) {
                if (button == "yes") {
                    var store = eventOptions.store;
                    store.remove(eventOptions.record);
                    store.sync();
                }
            }
        });
    },

    onPartUploadPanelResumeUpload: function(eventOptions) {
        var record = eventOptions.record;
        var id = record.get('id');
        var window = null;
        if (this.uploadWindowList[id]) {
            window = this.uploadWindowList[id];
        } else {
            var me = this;
            window = this.getView('PartUploadWindow').create({
                title: 'Resume Upload',
                controllerConfig: {
                    record: eventOptions.record
                }
            });
            window.addListener('destroy', function(window) {
                delete(me.uploadWindowList[id]);
            });
            this.uploadWindowList[id] = window;
        }
        window.show();
    },

    onToolClick: function(tool, e, eOpts) {
        this.getStore('MultipartUploadStore').reload();
    },

    init: function(application) {
        this.uploadWindowList = {};

        this.control({
            "#partUploadPanel": {
                abortUpload: this.onAbortUploadAction,
                resumeUpload: this.onPartUploadPanelResumeUpload
            },
            "#partUploadPanel #refresh": {
                click: this.onToolClick
            }
        });
    }

});
